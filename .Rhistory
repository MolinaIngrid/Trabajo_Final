#Comparación de modelos para explorar los resultados para ocupación:
occ_dredge_table <- occ_dredge%>%
mutate_all(~ round(., 3))
Occ_res <- as.data.frame(occ_dredge_table)
Occ_res
#Acá con la tabla de selección del modelo se puede observar cuales modelos tienen el mayor apoyo en el caso de esta especie here you can see which models have the most support for this species
# Los modelos con menos de 2.5 Delta AICc)
occ_dredge_Delta <- get.models(occ_dredge, subset = delta <= 2.5)
# modelos promediados basados en el peso del modelo
occ_avg <- model.avg(occ_dredge_Delta, fit = TRUE)
#  coeficientes de los modelos promediados para lsa probabilidades de ocupación y detección. fr the models with the most support from the data
coef(occ_avg)
newDatHab <- data.frame(Biomass_100m = mean(CR_HAB_BPI$Biomass_100m),
Biomass_30m = seq(min(CR_HAB_BPI$Biomass_30m),max(CR_HAB_BPI$Biomass_30m), length=100),
Per_Forest = mean(CR_HAB_BPI$Per_Forest))
occ_pred <- predict(occ_avg,
newdata = newDatHab,
type = "state")
Biomass_30m <- seq(min(CR_Hab_BPI2$Biomass_30m),max(CR_Hab_BPI2$Biomass_30m), length=100)
# par(mfrow=c(2,3))
plot(Biomass_30m, occ_pred$fit, xlab="Above Ground Biomass at 30m",
ylab="Occupancy Probability", pch=16, ylim=0:1, type="l",
lwd=2, main = Species_CR[3])
lines(Biomass_30m, occ_pred$fit-occ_pred$se.fit, lty=3,col=3)
lines(Biomass_30m, occ_pred$fit+occ_pred$se.fit, lty=3,col=3)
newDatHab2 <- data.frame(Biomass_100m = seq(min(CR_HAB_BPI$Biomass_100m),max(CR_HAB_BPI$Biomass_100m), length=100),
Biomass_30m = mean(CR_HAB_BPI$Biomass_30m),
Per_Forest = mean(CR_HAB_BPI$Per_Forest))
occ_pred2 <- predict(occ_avg,
newdata = newDatHab2,
type = "state")
Biomass_100m <- seq(min(CR_Hab_BPI2$Biomass_100m),max(CR_Hab_BPI2$Biomass_100m), length=100)
plot(Biomass_100m, occ_pred2$fit, xlab="Above Ground Biomass at 100m",
ylab="Occupancy Probability", pch=16, ylim=0:1, type="l",
#lwd=2, main = Species_CR[i])
lwd=3, main = Species_CR[3],col=3)
lines(Biomass_100m, occ_pred2$fit-occ_pred2$se.fit, lty=3,col=3)
lines(Biomass_100m, occ_pred2$fit+occ_pred2$se.fit, lty=3,col=3)
Species_CR <- c("Lepidocolaptes souleyetii","Chiroxiphia linearis","Basileuterus rufifrons","Catharus aurantiirostris",
"Momotus lessonii","Icterus galbula","Catharus ustulatus","Sittasomus griseicapillus")
#Species_CR <- Count_sp_obs.red[-1,1]
sp.name <- Species_CR[3]
temp.det.mat <- CR_2020_Matrix  #esta es la matriz de presencia ausencia para cada una de las réplicas
temp.data <- Data.CR.2020.BPI %>%
filter(Scientific.Name == sp.name) %>%
filter(year == 2020) %>%
filter(month %in% Months2020[1:3])
temp.sites <- unique(temp.data$Location)
site.match <- match(Sites_BPI_Obvs,temp.sites)
site.idx <- !is.na(match(Sites_BPI_Obvs,temp.sites))
for(ii in 1:length(Sites_BPI_Obvs)){
if(site.idx[ii] == TRUE){
temp.site <- temp.data %>%
filter(Location == temp.sites[site.match[ii]])
n.obs <- nrow(temp.site)
if(n.obs > 4){
n.obs <- 4;
} #acá hice este ajuste porque hay sitios que tienen más de 4 réplicas en 2020 pero es porque son réplicas que correspondían al 2019 que se terminaron tarde y calleron en la primera temporada de muestreo de este año. Pero lo importante es que tengamos 4 réplicas de cada punto
for(n in 1:n.obs){
temp.det.mat[ii,n] <- 1;
}
}else if(site.idx[ii] == FALSE){
temp.det.mat <- temp.det.mat
}
}
BasRufUMF <- unmarkedFrameOccu(y = temp.det.mat,siteCovs = CR_HAB_BPI)
summary(BasRufUMF)
str(BasRufUMF)
BasRufUMF[1:5,]
(null <- occu(~1 ~1, BasRufUMF))
## Backtransform: transforma "de vuelta" psi y p a la escala original
# NOTA: esta función sólo funciona en el modelo nulo
backTransform(null, "state") #probabilidad de ocupación
backTransform(null, "det") #probabilidad de detección
# Modelo global (ie, con biomasa en ambas resoluciones)
full <- occu(~Biomass_100m +Biomass_30m ~Biomass_100m + Biomass_30m + Per_Forest, BasRufUMF)
occ_dredge <- dredge(full)
#Comparación de modelos para explorar los resultados para ocupación:
occ_dredge_table <- occ_dredge%>%
mutate_all(~ round(., 3))
Occ_res <- as.data.frame(occ_dredge_table)
Occ_res
#Acá con la tabla de selección del modelo se puede observar cuales modelos tienen el mayor apoyo en el caso de esta especie here you can see which models have the most support for this species
# Los modelos con menos de 2.5 Delta AICc)
occ_dredge_Delta <- get.models(occ_dredge, subset = delta <= 2.5)
# modelos promediados basados en el peso del modelo
occ_avg <- model.avg(occ_dredge_Delta, fit = TRUE)
#  coeficientes de los modelos promediados para lsa probabilidades de ocupación y detección. fr the models with the most support from the data
coef(occ_avg)
newDatHab <- data.frame(Biomass_100m = mean(CR_HAB_BPI$Biomass_100m),
Biomass_30m = seq(min(CR_HAB_BPI$Biomass_30m),max(CR_HAB_BPI$Biomass_30m), length=100),
Per_Forest = mean(CR_HAB_BPI$Per_Forest))
occ_pred <- predict(occ_avg,
newdata = newDatHab,
type = "state")
Biomass_30m <- seq(min(CR_Hab_BPI2$Biomass_30m),max(CR_Hab_BPI2$Biomass_30m), length=100)
# par(mfrow=c(2,3))
plot(Biomass_30m, occ_pred$fit, xlab="Above Ground Biomass at 30m",
ylab="Occupancy Probability", pch=16, ylim=0:1, type="l",
lwd=2, main = Species_CR[3])
lines(Biomass_30m, occ_pred$fit-occ_pred$se.fit, lty=3,col=3)
lines(Biomass_30m, occ_pred$fit+occ_pred$se.fit, lty=3,col=3)
newDatHab2 <- data.frame(Biomass_100m = seq(min(CR_HAB_BPI$Biomass_100m),max(CR_HAB_BPI$Biomass_100m), length=100),
Biomass_30m = mean(CR_HAB_BPI$Biomass_30m),
Per_Forest = mean(CR_HAB_BPI$Per_Forest))
occ_pred2 <- predict(occ_avg,
newdata = newDatHab2,
type = "state")
Biomass_100m <- seq(min(CR_Hab_BPI2$Biomass_100m),max(CR_Hab_BPI2$Biomass_100m), length=100)
plot(Biomass_100m, occ_pred2$fit, xlab="Above Ground Biomass at 100m",
ylab="Occupancy Probability", pch=16, ylim=0:1, type="l",
#lwd=2, main = Species_CR[i])
lwd=3, main = Species_CR[3],col=3)
lines(Biomass_100m, occ_pred2$fit-occ_pred2$se.fit, lty=3,col=3)
lines(Biomass_100m, occ_pred2$fit+occ_pred2$se.fit, lty=3,col=3)
sp.name <- Species_CR[2]
temp.det.mat <- CR_2020_Matrix  #esta es la matriz de presencia ausencia para cada una de las réplicas
temp.data <- Data.CR.2020.BPI %>%
filter(Scientific.Name == sp.name) %>%
filter(year == 2020) %>%
filter(month %in% Months2020[1:3])
temp.sites <- unique(temp.data$Location)
site.match <- match(Sites_BPI_Obvs,temp.sites)
site.idx <- !is.na(match(Sites_BPI_Obvs,temp.sites))
for(ii in 1:length(Sites_BPI_Obvs)){
if(site.idx[ii] == TRUE){
temp.site <- temp.data %>%
filter(Location == temp.sites[site.match[ii]])
n.obs <- nrow(temp.site)
if(n.obs > 4){
n.obs <- 4;
}
for(n in 1:n.obs){
temp.det.mat[ii,n] <- 1;
}
}else if(site.idx[ii] == FALSE){
temp.det.mat <- temp.det.mat
}
}
ChiLinUMF <- unmarkedFrameOccu(y = temp.det.mat,siteCovs = CR_HAB_BPI)
summary(ChiLinUMF)
str(ChiLinUMF)
ChiLinUMF[1:5,]
#Acontinuación el modelo nulo:
(null <- occu(~1 ~1, ChiLinUMF))
## Backtransform: transforma "de vuelta" psi y p a la escala original
# NOTA: esta función sólo funciona en el modelo nulo
backTransform(null, "state") #probabilidad de ocupación
backTransform(null, "det") #probabilidad de detección
# Modelo global (ie, con biomasa en ambas resoluciones)
full <- occu(~Biomass_100m +Biomass_30m ~Biomass_100m + Biomass_30m + Per_Forest, ChiLinUMF)
occ_dredge <- dredge(full)
#Comparación de modelos para explorar los resultados para ocupación:
occ_dredge_table <- occ_dredge%>%
mutate_all(~ round(., 3))
#Acá con la tabla de selección del modelo se puede observar cuales modelos tienen el mayor apoyo en el caso de esta especie here you can see which models have the most support for this species
Occ_res <- as.data.frame(occ_dredge_table)
Occ_res
#Procedemos a la escogencia del mejor modelo utilizando el criterio de información de AKAIKE
# Los modelos con menos de 2.5 Delta AICc)
occ_dredge_Delta <- get.models(occ_dredge, subset = delta <= 2.5)
# modelos promediados basados en el peso del modelo
occ_avg <- model.avg(occ_dredge_Delta, fit = TRUE)
#  coeficientes de los modelos promediados para lsa probabilidades de ocupación y detección. fr the models with the most support from the data
coef(occ_avg)
#crear un data frame nuevo
#newDatHab <- data.frame(Biomass_100m = mean(CR_HAB_BPI$Biomass_100m),
#  Biomass_30m = #seq(min(CR_HAB_BPI$Biomass_30m),max(CR_HAB_BPI$Biomass_30m), length=100),
# Per_Forest = mean(CR_HAB_BPI$Per_Forest))
#occ_pred <- predict(occ_avg,
#                   newdata = newDatHab,
#                  type = "state")
#Biomass_30m <- seq(min(CR_Hab_BPI2$Biomass_30m),max(CR_Hab_BPI2$Biomass_30m), length=100)
# par(mfrow=c(2,3))
plot(Biomass_30m, occ_pred$fit, xlab="Above Ground Biomass at 30m",
ylab="Occupancy Probability", pch=16, ylim=0:1, type="l",
lwd=2, main = Species_CR[3])
lines(Biomass_30m, occ_pred$fit-occ_pred$se.fit, lty=3,col=3)
lines(Biomass_30m, occ_pred$fit+occ_pred$se.fit, lty=3,col=3)
#create a new data frame Prediciendo ocupación basandonos
#newDatHab2 <- data.frame(Biomass_100m = seq(min(CR_HAB_BPI$Biomass_100m),max(CR_HAB_BPI$Biomass_100m), length=100),
#Biomass_30m = mean(CR_HAB_BPI$Biomass_30m),
#Per_Forest = mean(CR_HAB_BPI$Per_Forest))
#occ_pred2 <- predict(occ_avg,
#newdata = newDatHab2,
#type = "state")
#Biomass_100m <- seq(min(CR_Hab_BPI2$Biomass_100m),max(CR_Hab_BPI2$Biomass_100m), length=100)
plot(Biomass_100m, occ_pred2$fit, xlab="Above Ground Biomass at 100m",
ylab="Occupancy Probability", pch=16, ylim=0:1, type="l",
#lwd=2, main = Species_CR[i])
lwd=3, main = Species_CR[3],col=3)
lines(Biomass_100m, occ_pred2$fit-occ_pred2$se.fit, lty=3,col=3)
lines(Biomass_100m, occ_pred2$fit+occ_pred2$se.fit, lty=3,col=3)
sp.name <- Species_CR[2]
temp.det.mat <- CR_2020_Matrix  #esta es la matriz de presencia ausencia para cada una de las réplicas
temp.data <- Data.CR.2020.BPI %>%
filter(Scientific.Name == sp.name) %>%
filter(year == 2020) %>%
filter(month %in% Months2020[1:3])
temp.sites <- unique(temp.data$Location)
site.match <- match(Sites_BPI_Obvs,temp.sites)
site.idx <- !is.na(match(Sites_BPI_Obvs,temp.sites))
for(ii in 1:length(Sites_BPI_Obvs)){
if(site.idx[ii] == TRUE){
temp.site <- temp.data %>%
filter(Location == temp.sites[site.match[ii]])
n.obs <- nrow(temp.site)
if(n.obs > 4){
n.obs <- 4;
}
for(n in 1:n.obs){
temp.det.mat[ii,n] <- 1;
}
}else if(site.idx[ii] == FALSE){
temp.det.mat <- temp.det.mat
}
}
ChiLinUMF <- unmarkedFrameOccu(y = temp.det.mat,siteCovs = CR_HAB_BPI)
summary(ChiLinUMF)
str(ChiLinUMF)
ChiLinUMF[1:5,]
#Acontinuación el modelo nulo:
(null <- occu(~1 ~1, ChiLinUMF))
## Backtransform: transforma "de vuelta" psi y p a la escala original
# NOTA: esta función sólo funciona en el modelo nulo
backTransform(null, "state") #probabilidad de ocupación
backTransform(null, "det") #probabilidad de detección
# Modelo global (ie, con biomasa en ambas resoluciones)
full <- occu(~Biomass_100m +Biomass_30m ~Biomass_100m + Biomass_30m + Per_Forest, ChiLinUMF)
occ_dredge <- dredge(full)
#Comparación de modelos para explorar los resultados para ocupación:
occ_dredge_table <- occ_dredge%>%
mutate_all(~ round(., 3))
#Acá con la tabla de selección del modelo se puede observar cuales modelos tienen el mayor apoyo en el caso de esta especie here you can see which models have the most support for this species
Occ_res <- as.data.frame(occ_dredge_table)
Occ_res
#Procedemos a la escogencia del mejor modelo utilizando el criterio de información de AKAIKE
# Los modelos con menos de 2.5 Delta AICc)
occ_dredge_Delta <- get.models(occ_dredge, subset = delta <= 2.5)
# modelos promediados basados en el peso del modelo
occ_avg <- model.avg(occ_dredge_Delta, fit = TRUE)
#  coeficientes de los modelos promediados para lsa probabilidades de ocupación y detección. fr the models with the most support from the data
coef(occ_avg)
#crear un data frame nuevo
#newDatHab <- data.frame(Biomass_100m = mean(CR_HAB_BPI$Biomass_100m),
#  Biomass_30m = #seq(min(CR_HAB_BPI$Biomass_30m),max(CR_HAB_BPI$Biomass_30m), length=100),
# Per_Forest = mean(CR_HAB_BPI$Per_Forest))
#occ_pred <- predict(occ_avg,
#                   newdata = newDatHab,
#                  type = "state")
#Biomass_30m <- seq(min(CR_Hab_BPI2$Biomass_30m),max(CR_Hab_BPI2$Biomass_30m), length=100)
# par(mfrow=c(2,3))
plot(Biomass_30m, occ_pred$fit, xlab="Above Ground Biomass at 30m",
ylab="Occupancy Probability", pch=16, ylim=0:1, type="l",
lwd=2, main = Species_CR[2])
lines(Biomass_30m, occ_pred$fit-occ_pred$se.fit, lty=3,col=3)
lines(Biomass_30m, occ_pred$fit+occ_pred$se.fit, lty=3,col=3)
#create a new data frame Prediciendo ocupación basandonos
#newDatHab2 <- data.frame(Biomass_100m = seq(min(CR_HAB_BPI$Biomass_100m),max(CR_HAB_BPI$Biomass_100m), length=100),
#Biomass_30m = mean(CR_HAB_BPI$Biomass_30m),
#Per_Forest = mean(CR_HAB_BPI$Per_Forest))
#occ_pred2 <- predict(occ_avg,
#newdata = newDatHab2,
#type = "state")
#Biomass_100m <- seq(min(CR_Hab_BPI2$Biomass_100m),max(CR_Hab_BPI2$Biomass_100m), length=100)
plot(Biomass_100m, occ_pred2$fit, xlab="Above Ground Biomass at 100m",
ylab="Occupancy Probability", pch=16, ylim=0:1, type="l",
#lwd=2, main = Species_CR[i])
lwd=3, main = Species_CR[2],col=3)
lines(Biomass_100m, occ_pred2$fit-occ_pred2$se.fit, lty=3,col=3)
lines(Biomass_100m, occ_pred2$fit+occ_pred2$se.fit, lty=3,col=3)
sp.name <- Species_CR[2]
temp.det.mat <- CR_2020_Matrix  #esta es la matriz de presencia ausencia para cada una de las réplicas
temp.data <- Data.CR.2020.BPI %>%
filter(Scientific.Name == sp.name) %>%
filter(year == 2020) %>%
filter(month %in% Months2020[1:3])
temp.sites <- unique(temp.data$Location)
site.match <- match(Sites_BPI_Obvs,temp.sites)
site.idx <- !is.na(match(Sites_BPI_Obvs,temp.sites))
for(ii in 1:length(Sites_BPI_Obvs)){
if(site.idx[ii] == TRUE){
temp.site <- temp.data %>%
filter(Location == temp.sites[site.match[ii]])
n.obs <- nrow(temp.site)
if(n.obs > 4){
n.obs <- 4;
}
for(n in 1:n.obs){
temp.det.mat[ii,n] <- 1;
}
}else if(site.idx[ii] == FALSE){
temp.det.mat <- temp.det.mat
}
}
ChiLinUMF <- unmarkedFrameOccu(y = temp.det.mat,siteCovs = CR_HAB_BPI)
summary(ChiLinUMF)
str(ChiLinUMF)
ChiLinUMF[1:5,]
#Acontinuación el modelo nulo:
(null <- occu(~1 ~1, ChiLinUMF))
## Backtransform: transforma "de vuelta" psi y p a la escala original
# NOTA: esta función sólo funciona en el modelo nulo
backTransform(null, "state") #probabilidad de ocupación
backTransform(null, "det") #probabilidad de detección
# Modelo global (ie, con biomasa en ambas resoluciones)
full <- occu(~Biomass_100m +Biomass_30m ~Biomass_100m + Biomass_30m + Per_Forest, ChiLinUMF)
occ_dredge <- dredge(full)
#Comparación de modelos para explorar los resultados para ocupación:
occ_dredge_table <- occ_dredge%>%
mutate_all(~ round(., 2))
#Acá con la tabla de selección del modelo se puede observar cuales modelos tienen el mayor apoyo en el caso de esta especie here you can see which models have the most support for this species
Occ_res <- as.data.frame(occ_dredge_table)
Occ_res
#Procedemos a la escogencia del mejor modelo utilizando el criterio de información de AKAIKE
# Los modelos con menos de 2.5 Delta AICc)
occ_dredge_Delta <- get.models(occ_dredge, subset = delta <= 2.5)
# modelos promediados basados en el peso del modelo
occ_avg <- model.avg(occ_dredge_Delta, fit = TRUE)
#  coeficientes de los modelos promediados para lsa probabilidades de ocupación y detección. fr the models with the most support from the data
coef(occ_avg)
#crear un data frame nuevo
#newDatHab <- data.frame(Biomass_100m = mean(CR_HAB_BPI$Biomass_100m),
#  Biomass_30m = #seq(min(CR_HAB_BPI$Biomass_30m),max(CR_HAB_BPI$Biomass_30m), length=100),
# Per_Forest = mean(CR_HAB_BPI$Per_Forest))
#occ_pred <- predict(occ_avg,
#                   newdata = newDatHab,
#                  type = "state")
#Biomass_30m <- seq(min(CR_Hab_BPI2$Biomass_30m),max(CR_Hab_BPI2$Biomass_30m), length=100)
# par(mfrow=c(2,3))
plot(Biomass_30m, occ_pred$fit, xlab="Above Ground Biomass at 30m",
ylab="Occupancy Probability", pch=16, ylim=0:1, type="l",
lwd=2, main = Species_CR[2])
lines(Biomass_30m, occ_pred$fit-occ_pred$se.fit, lty=3,col=3)
lines(Biomass_30m, occ_pred$fit+occ_pred$se.fit, lty=3,col=3)
#create a new data frame Prediciendo ocupación basandonos
#newDatHab2 <- data.frame(Biomass_100m = seq(min(CR_HAB_BPI$Biomass_100m),max(CR_HAB_BPI$Biomass_100m), length=100),
#Biomass_30m = mean(CR_HAB_BPI$Biomass_30m),
#Per_Forest = mean(CR_HAB_BPI$Per_Forest))
#occ_pred2 <- predict(occ_avg,
#newdata = newDatHab2,
#type = "state")
#Biomass_100m <- seq(min(CR_Hab_BPI2$Biomass_100m),max(CR_Hab_BPI2$Biomass_100m), length=100)
plot(Biomass_100m, occ_pred2$fit, xlab="Above Ground Biomass at 100m",
ylab="Occupancy Probability", pch=16, ylim=0:1, type="l",
#lwd=2, main = Species_CR[i])
lwd=3, main = Species_CR[2],col=3)
lines(Biomass_100m, occ_pred2$fit-occ_pred2$se.fit, lty=3,col=3)
lines(Biomass_100m, occ_pred2$fit+occ_pred2$se.fit, lty=3,col=3)
sp.name <- Species_CR[2]
temp.det.mat <- CR_2020_Matrix  #esta es la matriz de presencia ausencia para cada una de las réplicas
temp.data <- Data.CR.2020.BPI %>%
filter(Scientific.Name == sp.name) %>%
filter(year == 2020) %>%
filter(month %in% Months2020[1:3])
temp.sites <- unique(temp.data$Location)
site.match <- match(Sites_BPI_Obvs,temp.sites)
site.idx <- !is.na(match(Sites_BPI_Obvs,temp.sites))
for(ii in 1:length(Sites_BPI_Obvs)){
if(site.idx[ii] == TRUE){
temp.site <- temp.data %>%
filter(Location == temp.sites[site.match[ii]])
n.obs <- nrow(temp.site)
if(n.obs > 4){
n.obs <- 4;
}
for(n in 1:n.obs){
temp.det.mat[ii,n] <- 1;
}
}else if(site.idx[ii] == FALSE){
temp.det.mat <- temp.det.mat
}
}
ChiLinUMF <- unmarkedFrameOccu(y = temp.det.mat,siteCovs = CR_HAB_BPI)
summary(ChiLinUMF)
str(ChiLinUMF)
ChiLinUMF[1:5,]
#Acontinuación el modelo nulo:
(null <- occu(~1 ~1, ChiLinUMF))
## Backtransform: transforma "de vuelta" psi y p a la escala original
# NOTA: esta función sólo funciona en el modelo nulo
backTransform(null, "state") #probabilidad de ocupación
backTransform(null, "det") #probabilidad de detección
# Modelo global (ie, con biomasa en ambas resoluciones)
full <- occu(~Biomass_100m +Biomass_30m ~Biomass_100m + Biomass_30m + Per_Forest, ChiLinUMF)
occ_dredge <- dredge(full)
#Comparación de modelos para explorar los resultados para ocupación:
occ_dredge_table <- occ_dredge%>%
mutate_all(~ round(., 3))
#Acá con la tabla de selección del modelo se puede observar cuales modelos tienen el mayor apoyo en el caso de esta especie here you can see which models have the most support for this species
Occ_res <- as.data.frame(occ_dredge_table)
Occ_res
#Procedemos a la escogencia del mejor modelo utilizando el criterio de información de AKAIKE
# Los modelos con menos de 2.5 Delta AICc)
occ_dredge_Delta <- get.models(occ_dredge, subset = delta <= 2.5)
# modelos promediados basados en el peso del modelo
occ_avg <- model.avg(occ_dredge_Delta, fit = TRUE)
#  coeficientes de los modelos promediados para lsa probabilidades de ocupación y detección. fr the models with the most support from the data
coef(occ_avg)
#crear un data frame nuevo
newDatHab <- data.frame(Biomass_100m = mean(CR_HAB_BPI$Biomass_100m),
Biomass_30m = seq(min(CR_HAB_BPI$Biomass_30m),max(CR_HAB_BPI$Biomass_30m), length=100),
Per_Forest = mean(CR_HAB_BPI$Per_Forest))
occ_pred <- predict(occ_avg,
newdata = newDatHab,
type = "state")
Biomass_30m <- seq(min(CR_Hab_BPI2$Biomass_30m),max(CR_Hab_BPI2$Biomass_30m), length=100)
par(mfrow=c(2,3))
plot(Biomass_30m, occ_pred$fit, xlab="Above Ground Biomass at 30m",
ylab="Occupancy Probability", pch=16, ylim=0:1, type="l",
lwd=2, main = Species_CR[2])
lines(Biomass_30m, occ_pred$fit-occ_pred$se.fit, lty=3,col=3)
lines(Biomass_30m, occ_pred$fit+occ_pred$se.fit, lty=3,col=3)
#create a new data frame Prediciendo ocupación basandonos
newDatHab2 <- data.frame(Biomass_100m = seq(min(CR_HAB_BPI$Biomass_100m),max(CR_HAB_BPI$Biomass_100m), length=100),
Biomass_30m = mean(CR_HAB_BPI$Biomass_30m),
Per_Forest = mean(CR_HAB_BPI$Per_Forest))
occ_pred2 <- predict(occ_avg,
newdata = newDatHab2,
type = "state")
Biomass_100m <- seq(min(CR_Hab_BPI2$Biomass_100m),max(CR_Hab_BPI2$Biomass_100m), length=100)
plot(Biomass_100m, occ_pred2$fit, xlab="Above Ground Biomass at 100m",
ylab="Occupancy Probability", pch=16, ylim=0:1, type="l",
#lwd=2, main = Species_CR[i])
lwd=3, main = Species_CR[2],col=3)
lines(Biomass_100m, occ_pred2$fit-occ_pred2$se.fit, lty=3,col=3)
lines(Biomass_100m, occ_pred2$fit+occ_pred2$se.fit, lty=3,col=3)
sp.name <- Species_CR[1]
temp.det.mat <- CR_2020_Matrix  #esta es la matriz de presencia ausencia para cada una de las réplicas
temp.data <- Data.CR.2020.BPI %>%
filter(Scientific.Name == sp.name) %>%
filter(year == 2020) %>%
filter(month %in% Months2020[1:3])
temp.sites <- unique(temp.data$Location)
site.match <- match(Sites_BPI_Obvs,temp.sites)
site.idx <- !is.na(match(Sites_BPI_Obvs,temp.sites))
for(ii in 1:length(Sites_BPI_Obvs)){
if(site.idx[ii] == TRUE){
temp.site <- temp.data %>%
filter(Location == temp.sites[site.match[ii]])
n.obs <- nrow(temp.site)
if(n.obs > 4){
n.obs <- 4;
}
for(n in 1:n.obs){
temp.det.mat[ii,n] <- 1;
}
}else if(site.idx[ii] == FALSE){
temp.det.mat <- temp.det.mat
}
}
LepSouUMF <- unmarkedFrameOccu(y = temp.det.mat,siteCovs = CR_HAB_BPI)
summary(LepSouUMF)
str(LepSouUMF)
LepSouUMF[1:5,]
#Acontinuación el modelo nulo:
(null <- occu(~1 ~1, LepSouUMF))
## Backtransform: transforma "de vuelta" psi y p a la escala original
# NOTA: esta función sólo funciona en el modelo nulo
backTransform(null, "state") #probabilidad de ocupación
backTransform(null, "det") #probabilidad de detección
# Modelo global (ie, con biomasa en ambas resoluciones)
full <- occu(~Biomass_100m +Biomass_30m ~Biomass_100m + Biomass_30m + Per_Forest, LepSouUMF)
occ_dredge <- dredge(full)
#Comparación de modelos para explorar los resultados para ocupación:
occ_dredge_table <- occ_dredge%>%
mutate_all(~ round(., 3))
#Acá con la tabla de selección del modelo se puede observar cuales modelos tienen el mayor apoyo en el caso de esta especie here you can see which models have the most support for this species
Occ_res <- as.data.frame(occ_dredge_table)
Occ_res
#Procedemos a la escogencia del mejor modelo utilizando el criterio de información de AKAIKE
# Los modelos con menos de 2.5 Delta AICc)
occ_dredge_Delta <- get.models(occ_dredge, subset = delta <= 2.5)
# modelos promediados basados en el peso del modelo
occ_avg <- model.avg(occ_dredge_Delta, fit = TRUE)
#  coeficientes de los modelos promediados para lsa probabilidades de ocupación y detección. fr the models with the most support from the data
coef(occ_avg)
#crear un data frame nuevo
newDatHab <- data.frame(Biomass_100m = mean(CR_HAB_BPI$Biomass_100m),
Biomass_30m = seq(min(CR_HAB_BPI$Biomass_30m),max(CR_HAB_BPI$Biomass_30m), length=100),
Per_Forest = mean(CR_HAB_BPI$Per_Forest))
occ_pred <- predict(occ_avg,
newdata = newDatHab,
type = "state")
Biomass_30m <- seq(min(CR_Hab_BPI2$Biomass_30m),max(CR_Hab_BPI2$Biomass_30m), length=100)
par(mfrow=c(2,3))
plot(Biomass_30m, occ_pred$fit, xlab="Above Ground Biomass at 30m",
ylab="Occupancy Probability", pch=16, ylim=0:1, type="l",
lwd=2, main = Species_CR[1])
lines(Biomass_30m, occ_pred$fit-occ_pred$se.fit, lty=3,col=3)
lines(Biomass_30m, occ_pred$fit+occ_pred$se.fit, lty=3,col=3)
#create a new data frame Prediciendo ocupación basandonos
newDatHab2 <- data.frame(Biomass_100m = seq(min(CR_HAB_BPI$Biomass_100m),max(CR_HAB_BPI$Biomass_100m), length=100),
Biomass_30m = mean(CR_HAB_BPI$Biomass_30m),
Per_Forest = mean(CR_HAB_BPI$Per_Forest))
occ_pred2 <- predict(occ_avg,
newdata = newDatHab2,
type = "state")
Biomass_100m <- seq(min(CR_Hab_BPI2$Biomass_100m),max(CR_Hab_BPI2$Biomass_100m), length=100)
plot(Biomass_100m, occ_pred2$fit, xlab="Above Ground Biomass at 100m",
ylab="Occupancy Probability", pch=16, ylim=0:1, type="l",
#lwd=2, main = Species_CR[i])
lwd=3, main = Species_CR[1],col=3)
lines(Biomass_100m, occ_pred2$fit-occ_pred2$se.fit, lty=3,col=3)
lines(Biomass_100m, occ_pred2$fit+occ_pred2$se.fit, lty=3,col=3)
Aves_CR_sub[26,]
Aves_CR_sub[2,]
CR_Family_List
![Reinita Cafetalera](C:/Users/in/Documents/MAESTRIA/Cursos/Estrategias/Trabajo_Final/basruf.jpg)
Occ_res
# Los modelos con menos de 2.5 Delta AICc)
occ_dredge_Delta <- get.models(occ_dredge, subset = delta <= 2.5)
